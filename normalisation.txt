In the last two decades, attempts were made to solve what issues?
- I'm sorry, I cannot answer that question based on the information provided in this PDF. While the PDF discusses attempts to develop electronic health record systems and personalized virtual patient models for the ageing population, it does not provide a specific timeframe or mention any issues that were attempted to be solved in the last two decades.

What specific computational challenges in health systems made the issues even more complicated?
- computational challenges in health systems due to which standard Information and Communication Technology (ICT) systems are hard to keep up, include the high variety and complexity of data, and high rate of data change ranging from clinical processes to protocols." These challenges have made it more difficult to develop effective electronic health record systems and personalized virtual patient models for the ageing population.

What are the factors that the effective medical data systems possess?
- The PDF explains that effective medical data systems should be designed with a good database and schema. This will help the system manage clinical data well, which means it can handle many requests for information, be flexible to changes, and be able to grow as needed.

What is the disadvantage of the "Node and Path" method (a method that uses the relational model to store BLOBs) for storing open electronic
health records (OpenEHR)?
- According to page 3 of the PDF, there is no mention of any disadvantages of the "Node and Path" method for storing open electronic health records (OpenEHR). The PDF only explains that this method is used by numerous archetype-based systems.


Why was HBase selected for the storage of the data of the project?
- HBase was chosen for the FrailSafe project because it is a type of database that can handle a lot of data and is good at quickly reading and writing information. It can also be used for very large tables with many rows and columns. This is important for the FrailSafe project because it collects a lot of sensor data in real-time, which means it needs to be able to handle a lot of information quickly.

What is the logic in HBase's table design (column families that have any number of columns)?
- the table design logic in HBase is as follows: a table is a group of rows, a row is a group of column families, a column family is a group of columns, and a column is a group of key-value pairs. In HBase, only column families are defined by the table schema. A table can consist of multiple column families, each of which can have any number of columns.
